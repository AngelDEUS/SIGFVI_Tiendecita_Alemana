-- MySQL Script generated by MySQL Workbench
-- Fri Jul 14 14:00:30 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema sigfvi_bd
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sigfvi_bd` ;

-- -----------------------------------------------------
-- Schema sigfvi_bd
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sigfvi_bd` DEFAULT CHARACTER SET utf8mb4 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Estado` (
  `ID_Estado_PK` TINYINT NOT NULL COMMENT 'Campo que contiene la clave unica del registro del estado.',
  `Nombre_Estado` VARCHAR(25) NOT NULL COMMENT 'Campo que contien el Nombre del estado.',
  PRIMARY KEY (`ID_Estado_PK`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Tipo_Producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tipo_Producto` (
  `ID_Tipo_Producto_PK` TINYINT NOT NULL COMMENT 'Campo con la llave primaria del tipo de producto.',
  `Nombre_Tipo_Producto` VARCHAR(45) NOT NULL COMMENT 'Campo con el nombre del tipo de producto.',
  PRIMARY KEY (`ID_Tipo_Producto_PK`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Producto` (
  `ID_Producto_PK` VARCHAR(15) NOT NULL COMMENT 'Campo como llave primaria de tipo varchar del producto.',
  `ID_Tipo_Producto_FK` TINYINT NOT NULL,
  `Nombre_Producto` VARCHAR(25) NOT NULL COMMENT 'Campo con el nombre del producto.',
  `Cantida_Neto_producto` MEDIUMINT NOT NULL COMMENT 'Campo con la cantidad neta del producto segun el tipo de producto.',
  `Precio_Proveedor` DECIMAL(11,2) UNSIGNED NOT NULL COMMENT 'Campo con el precio inicial de compra a el proveedor.',
  `Precio_Venta` DECIMAL(11,2) UNSIGNED NOT NULL COMMENT 'Campo con el precio de venta al cliente.',
  `Fecha_Vencimiento` DATE NOT NULL COMMENT 'Campo con la fecha de vencimiento del producto.',
  `Foto_Producto` VARCHAR(255) NOT NULL COMMENT 'Campo en donde se almacena la url o direccion de alojamiento de la imagen.',
  `ID_Estado_FK` TINYINT NOT NULL,
  PRIMARY KEY (`ID_Producto_PK`),
  CONSTRAINT `fk_Producto_Estado1`
    FOREIGN KEY (`ID_Estado_FK`)
    REFERENCES `mydb`.`Estado` (`ID_Estado_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Producto_Tipo_Producto1`
    FOREIGN KEY (`ID_Tipo_Producto_FK`)
    REFERENCES `mydb`.`Tipo_Producto` (`ID_Tipo_Producto_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Producto_Estado1_idx` ON `mydb`.`Producto` (`ID_Estado_FK` ASC) VISIBLE;

CREATE INDEX `fk_Producto_Tipo_Producto1_idx` ON `mydb`.`Producto` (`ID_Tipo_Producto_FK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Tipo_Cargo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tipo_Cargo` (
  `ID_Tipo_Cargo_PK` TINYINT NOT NULL COMMENT 'Campo con la llave primaria del ID del tipo de cargo autoincrementable.',
  `Nombre_Tipo_cargo` VARCHAR(45) NOT NULL COMMENT 'Campo con el nombre del tipo del cargo.',
  `Estado_ID_Estado_PK` TINYINT NOT NULL,
  PRIMARY KEY (`ID_Tipo_Cargo_PK`),
  CONSTRAINT `fk_Tipo_Cargo_Estado1`
    FOREIGN KEY (`Estado_ID_Estado_PK`)
    REFERENCES `mydb`.`Estado` (`ID_Estado_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Tipo_Cargo_Estado1_idx` ON `mydb`.`Tipo_Cargo` (`Estado_ID_Estado_PK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Tipo_identificacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tipo_identificacion` (
  `ID_Tipo_Identificacion_PK` TINYINT NOT NULL AUTO_INCREMENT COMMENT 'Campo con la llave primaria del ID del tipo de identificacion autoincrementable.',
  `Nombre_Identificacion` VARCHAR(45) NOT NULL COMMENT 'Campo del nombre del tipo de identificacion.',
  PRIMARY KEY (`ID_Tipo_Identificacion_PK`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Usuario` (
  `ID_Numero_Identificacion_PK` VARCHAR(25) NOT NULL COMMENT 'Campo con la llave primaria del numero de identificacion del Usuario.',
  `ID_Tipo_Identificacion_FKPK` TINYINT NOT NULL,
  `Nombre_Usuario` VARCHAR(45) NOT NULL COMMENT 'Campo con el primer nombre del usuario.',
  `Apellido_Usuario` VARCHAR(45) NOT NULL COMMENT 'Campo con el primer apellido de usuario.',
  `Numero_Contacto_Usuario` VARCHAR(10) NOT NULL COMMENT 'Campo con el numero del contacto de un usuario de tipo cadena de texto.',
  `Email_Usuario` VARCHAR(45) NOT NULL COMMENT 'Campo con el correo electorinico del usuario.',
  `Password_Usuario` VARCHAR(30) NOT NULL COMMENT 'Campo con la password de ingreso a el sistema del usuario.',
  `ID_Tipo_Cargo_FK` TINYINT NOT NULL,
  `ID_Estado_FK` TINYINT NOT NULL,
  PRIMARY KEY (`ID_Numero_Identificacion_PK`, `ID_Tipo_Identificacion_FKPK`),
  CONSTRAINT `fk_Usuario_Estado1`
    FOREIGN KEY (`ID_Estado_FK`)
    REFERENCES `mydb`.`Estado` (`ID_Estado_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuario_Tipo_Cargo1`
    FOREIGN KEY (`ID_Tipo_Cargo_FK`)
    REFERENCES `mydb`.`Tipo_Cargo` (`ID_Tipo_Cargo_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuario_Tipo_identificacion1`
    FOREIGN KEY (`ID_Tipo_Identificacion_FKPK`)
    REFERENCES `mydb`.`Tipo_identificacion` (`ID_Tipo_Identificacion_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Usuario_Estado1_idx` ON `mydb`.`Usuario` (`ID_Estado_FK` ASC) VISIBLE;

CREATE INDEX `fk_Usuario_Tipo_Cargo1_idx` ON `mydb`.`Usuario` (`ID_Tipo_Cargo_FK` ASC) VISIBLE;

CREATE INDEX `fk_Usuario_Tipo_identificacion1_idx` ON `mydb`.`Usuario` (`ID_Tipo_Identificacion_FKPK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.``
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`` (
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Registro_Proveedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Registro_Proveedor` (
  `ID_Registro_Proveedor_PK` SMALLINT(3) NOT NULL COMMENT 'Campo con el ID como identificador unico de cada Proveedor.',
  `Nombre_Empresa` VARCHAR(45) NOT NULL COMMENT 'Campo con el nombre del Proveedor.',
  `Dia_Visita` VARCHAR(60) NOT NULL COMMENT 'Campo de tipo varchar para almacenar el dia o los dias de la visita del proveedor.',
  `Telefono_Contacto` VARCHAR(12) NOT NULL COMMENT 'Campo de tipo varchar con el numero telefonico del proveedor.',
  `Estado_ID_Estado_PK` TINYINT NOT NULL,
  PRIMARY KEY (`ID_Registro_Proveedor_PK`),
  CONSTRAINT `fk_Registro_Proveedor_Estado1`
    FOREIGN KEY (`Estado_ID_Estado_PK`)
    REFERENCES `mydb`.`Estado` (`ID_Estado_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Registro_Proveedor_Estado1_idx` ON `mydb`.`Registro_Proveedor` (`Estado_ID_Estado_PK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Cuenta_Deudor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Cuenta_Deudor` (
  `ID_Deudor_PK` INT NOT NULL AUTO_INCREMENT COMMENT 'Campo con la llave primaria del deudor auto incrementable.',
  `Primer_Nombre` VARCHAR(45) NOT NULL COMMENT 'Campo con el primer nombre de la cuenta del deudor.',
  `Segundo_Nombre` VARCHAR(45) NULL COMMENT 'Campo con el segundo nombre del deudor y puede estar vacio.',
  `Primer_Apellido` VARCHAR(45) NOT NULL COMMENT 'Campo con el primer apellido del deudor.',
  `Segundo_Apellido` VARCHAR(45) NULL COMMENT 'Campo con el segundo apellido del deudor y puede esta vacio.',
  `Direccion_Deudor` VARCHAR(45) NOT NULL COMMENT 'Campo con la direccion del deudor.',
  `Telefono_Deudor` VARCHAR(10) NOT NULL COMMENT 'Campo con el telefono de contacto del deudor.',
  `ID_Estado_FK` TINYINT NOT NULL,
  PRIMARY KEY (`ID_Deudor_PK`),
  CONSTRAINT `fk_Cuenta_Deudor_Estado1`
    FOREIGN KEY (`ID_Estado_FK`)
    REFERENCES `mydb`.`Estado` (`ID_Estado_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Cuenta_Deudor_Estado1_idx` ON `mydb`.`Cuenta_Deudor` (`ID_Estado_FK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Metodo de pago`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Metodo de pago` (
  `ID_Metodo_Pago_PK` TINYINT NOT NULL COMMENT 'Campo con la llave primaria del metodo de pago',
  ` Nombre_Metodo` VARCHAR(45) NOT NULL COMMENT 'Campo con el nombre del metodo de pago.',
  PRIMARY KEY (`ID_Metodo_Pago_PK`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Saldo_Cuenta_Deudor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Saldo_Cuenta_Deudor` (
  `ID_Saldo_PK` INT NOT NULL AUTO_INCREMENT COMMENT 'Campo con la llave primaria del ID del saldo de la cuenta del deudor auto incrementable.',
  `ID_Deudor_FK` INT NOT NULL,
  `Fecha_Cancelacion_Pedido` DATE NOT NULL COMMENT 'Campo con la fecha oportuna para realizar el pago de la deuda, conciliada entre el deudor y el gerente.',
  `Total_Saldo_Deuda` INT NOT NULL COMMENT 'Campo en donde se suman todos los totales de los pedidos acumulados en la cuenta del deudor.',
  PRIMARY KEY (`ID_Saldo_PK`),
  CONSTRAINT `fk_Saldo_Cuenta_Deudor_Cuenta_Deudor1`
    FOREIGN KEY (`ID_Deudor_FK`)
    REFERENCES `mydb`.`Cuenta_Deudor` (`ID_Deudor_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Saldo_Cuenta_Deudor_Cuenta_Deudor1_idx` ON `mydb`.`Saldo_Cuenta_Deudor` (`ID_Deudor_FK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Pedido` (
  `ID_Pedido_PK` INT NOT NULL AUTO_INCREMENT COMMENT 'Campo con la llave primaria del pedido.',
  `ID_Metodo_Pago_FK` TINYINT NOT NULL,
  `Fecha_Pedido` DATE NOT NULL COMMENT 'Campo con la fecha en la que crea el pedido.',
  `Hora_Pedido` TIME NOT NULL COMMENT 'Campo con la hora en la que se crea el pedido.',
  `IVA` TINYINT(30) NOT NULL COMMENT 'Campo en donde se calcula el total del IVA segun el total del pedido.',
  `Total_Pedido` INT NOT NULL COMMENT 'Campo con el calculo del total de los subtotales del detalle del pedido.',
  `ID_Estado_FK` TINYINT NOT NULL,
  `ID_Saldo_PK` INT NULL,
  PRIMARY KEY (`ID_Pedido_PK`),
  CONSTRAINT `fk_Pedido_Estado1`
    FOREIGN KEY (`ID_Estado_FK`)
    REFERENCES `mydb`.`Estado` (`ID_Estado_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_Metodo de pago1`
    FOREIGN KEY (`ID_Metodo_Pago_FK`)
    REFERENCES `mydb`.`Metodo de pago` (`ID_Metodo_Pago_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pedido_Saldo_Cuenta_Deudor1`
    FOREIGN KEY (`ID_Saldo_PK`)
    REFERENCES `mydb`.`Saldo_Cuenta_Deudor` (`ID_Saldo_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Pedido_Estado1_idx` ON `mydb`.`Pedido` (`ID_Estado_FK` ASC) VISIBLE;

CREATE INDEX `fk_Pedido_Metodo de pago1_idx` ON `mydb`.`Pedido` (`ID_Metodo_Pago_FK` ASC) VISIBLE;

CREATE INDEX `fk_Pedido_Saldo_Cuenta_Deudor1_idx` ON `mydb`.`Pedido` (`ID_Saldo_PK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Venta_Realizada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Venta_Realizada` (
  `ID_Venta_Realizada_PK` INT NOT NULL AUTO_INCREMENT COMMENT 'Campo con la llave primaria de la venta realizada despues del pedido.',
  `Saldo_Cuenta_Deudor_ID_Saldo_PK` INT NOT NULL,
  `ID_Pedido_FK` INT NOT NULL,
  PRIMARY KEY (`ID_Venta_Realizada_PK`),
  CONSTRAINT `fk_Venta_Realizada_Saldo_Cuenta_Deudor1`
    FOREIGN KEY (`Saldo_Cuenta_Deudor_ID_Saldo_PK`)
    REFERENCES `mydb`.`Saldo_Cuenta_Deudor` (`ID_Saldo_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venta_Realizada_Pedido1`
    FOREIGN KEY (`ID_Pedido_FK`)
    REFERENCES `mydb`.`Pedido` (`ID_Pedido_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Venta_Realizada_Saldo_Cuenta_Deudor1_idx` ON `mydb`.`Venta_Realizada` (`Saldo_Cuenta_Deudor_ID_Saldo_PK` ASC) VISIBLE;

CREATE INDEX `fk_Venta_Realizada_Pedido1_idx` ON `mydb`.`Venta_Realizada` (`ID_Pedido_FK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Facturacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Facturacion` (
  `ID_Factura_PK` INT NOT NULL AUTO_INCREMENT COMMENT 'Campo con la llave primaria de la factura.',
  `Fecha_Factura` DATE NOT NULL COMMENT 'Campo en el que se ingresa la fecha en la que se genera la factura.',
  `Hora_Factura` TIME NOT NULL COMMENT 'Campo en el que se ingresa la hora en la que se genera la factura.',
  `ID_Venta_Realizada_FK` INT NOT NULL,
  PRIMARY KEY (`ID_Factura_PK`),
  CONSTRAINT `fk_Facturacion_Venta_Realizada1`
    FOREIGN KEY (`ID_Venta_Realizada_FK`)
    REFERENCES `mydb`.`Venta_Realizada` (`ID_Venta_Realizada_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Facturacion_Venta_Realizada1_idx` ON `mydb`.`Facturacion` (`ID_Venta_Realizada_FK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Inventario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Inventario` (
  `ID_Inventario_PK` SMALLINT(10) NOT NULL COMMENT 'Campo que contiene la clave unica del registro del inventario autoincrementable.',
  `Cantidad_Lote` SMALLINT(5) NOT NULL,
  `Cantidad_Lote` SMALLINT(10) NOT NULL,
  `Stock` INT UNSIGNED NOT NULL COMMENT 'Campo que calcula y agrupa la cantidad de productos registrados.',
  `ID_Estado_FK` TINYINT NOT NULL,
  `Producto_ID_Producto_PK` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`ID_Inventario_PK`),
  CONSTRAINT `fk_Inventario_Estado1`
    FOREIGN KEY (`ID_Estado_FK`)
    REFERENCES `mydb`.`Estado` (`ID_Estado_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Inventario_Producto1`
    FOREIGN KEY (`Producto_ID_Producto_PK`)
    REFERENCES `mydb`.`Producto` (`ID_Producto_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Inventario_Estado1_idx` ON `mydb`.`Inventario` (`ID_Estado_FK` ASC) VISIBLE;

CREATE INDEX `fk_Inventario_Producto1_idx` ON `mydb`.`Inventario` (`Producto_ID_Producto_PK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Tipo_Informe_Venta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tipo_Informe_Venta` (
  `ID_Informe_Venta_PF` INT NOT NULL COMMENT 'Campo con la llave primaria del informe de venta autoincrementable.',
  `ID_Factura_FK` INT NOT NULL,
  PRIMARY KEY (`ID_Informe_Venta_PF`),
  CONSTRAINT `fk_Tipo_Informe_Venta_Facturacion1`
    FOREIGN KEY (`ID_Factura_FK`)
    REFERENCES `mydb`.`Facturacion` (`ID_Factura_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `ID_Informe_Venta_PF_UNIQUE` ON `mydb`.`Tipo_Informe_Venta` (`ID_Informe_Venta_PF` ASC) VISIBLE;

CREATE INDEX `fk_Tipo_Informe_Venta_Facturacion1_idx` ON `mydb`.`Tipo_Informe_Venta` (`ID_Factura_FK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Salida_producto_Inventario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Salida_producto_Inventario` (
  `ID_Salida_producto_Inventario_PK` INT NOT NULL AUTO_INCREMENT COMMENT 'Campo con la llave primaria del ID de la salida de un producto en el inventario autoincrementable.',
  `Descripcion_Salida` TEXT(400) NOT NULL COMMENT 'Campo con la descripcion detallada de la salida de un producto en el inventario',
  `Fecha_Salida` DATE NOT NULL COMMENT 'Campo con el ingreso de la fecha de la salida de un producto en el inventario.',
  `Hora_Salida` TIME NOT NULL COMMENT 'Campo con el ingreso de la hora de la salida de un producto en el inventario.',
  `ID_Inventario_FK` SMALLINT(10) NOT NULL,
  `Usuario_IDIdentificacion_FK` VARCHAR(25) NOT NULL,
  `Usuario_ID_Tipo_Identificacion_FKPK` TINYINT NOT NULL,
  PRIMARY KEY (`ID_Salida_producto_Inventario_PK`),
  CONSTRAINT `fk_Salida_producto_Inventario_Inventario1`
    FOREIGN KEY (`ID_Inventario_FK`)
    REFERENCES `mydb`.`Inventario` (`ID_Inventario_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Salida_producto_Inventario_Usuario1`
    FOREIGN KEY (`Usuario_IDIdentificacion_FK` , `Usuario_ID_Tipo_Identificacion_FKPK`)
    REFERENCES `mydb`.`Usuario` (`ID_Numero_Identificacion_PK` , `ID_Tipo_Identificacion_FKPK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Salida_producto_Inventario_Inventario1_idx` ON `mydb`.`Salida_producto_Inventario` (`ID_Inventario_FK` ASC) VISIBLE;

CREATE INDEX `fk_Salida_producto_Inventario_Usuario1_idx` ON `mydb`.`Salida_producto_Inventario` (`Usuario_IDIdentificacion_FK` ASC, `Usuario_ID_Tipo_Identificacion_FKPK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Tipo_Informe_Inventario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tipo_Informe_Inventario` (
  `ID_Informe_Inventario_PK` INT UNSIGNED NOT NULL COMMENT 'Campo con la llave primaria del tipo de informe del inventario autoincrementable.',
  `ID_Salida_producto_Inventario_FK` INT NOT NULL,
  `ID_Inventario_FK` SMALLINT(10) NOT NULL,
  PRIMARY KEY (`ID_Informe_Inventario_PK`),
  CONSTRAINT `fk_Tipo_Informe_Inventario_Salida_producto_Inventario1`
    FOREIGN KEY (`ID_Salida_producto_Inventario_FK`)
    REFERENCES `mydb`.`Salida_producto_Inventario` (`ID_Salida_producto_Inventario_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tipo_Informe_Inventario_Inventario1`
    FOREIGN KEY (`ID_Inventario_FK`)
    REFERENCES `mydb`.`Inventario` (`ID_Inventario_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Tipo_Informe_Inventario_Salida_producto_Inventario1_idx` ON `mydb`.`Tipo_Informe_Inventario` (`ID_Salida_producto_Inventario_FK` ASC) VISIBLE;

CREATE INDEX `fk_Tipo_Informe_Inventario_Inventario1_idx` ON `mydb`.`Tipo_Informe_Inventario` (`ID_Inventario_FK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Entrada_Producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Entrada_Producto` (
  `ID_Entrada_Producto_PK` INT NOT NULL COMMENT 'Campo con la llave primaria del ID de la entra del producto a el sistema',
  `Fecha_Entrada_Producto` DATE NOT NULL COMMENT 'Campo que almacena la fecha de entrada de un producto en el sistema.',
  `Hora_Entrada_Producto` TIME NOT NULL COMMENT 'Campo que almacena la hora de entrada de un producto en el sistema.',
  `Producto_ID_Producto_PK` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`ID_Entrada_Producto_PK`),
  CONSTRAINT `fk_Entrada_Producto_Producto1`
    FOREIGN KEY (`Producto_ID_Producto_PK`)
    REFERENCES `mydb`.`Producto` (`ID_Producto_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Entrada_Producto_Producto1_idx` ON `mydb`.`Entrada_Producto` (`Producto_ID_Producto_PK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Tipo_Informe_Empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tipo_Informe_Empleado` (
  `ID_Tipo_Informe_Empleado_PK` INT NOT NULL AUTO_INCREMENT COMMENT 'Campo con la llave primaria del ID del Informe del empleado autoincrementable..',
  `ID_Entrada_Producto_PK` INT NOT NULL,
  `ID_Salida_producto_Inventario_FK` INT NOT NULL,
  PRIMARY KEY (`ID_Tipo_Informe_Empleado_PK`),
  CONSTRAINT `fk_Tipo_Informe_Empleado_Entrada_Producto1`
    FOREIGN KEY (`ID_Entrada_Producto_PK`)
    REFERENCES `mydb`.`Entrada_Producto` (`ID_Entrada_Producto_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tipo_Informe_Empleado_Salida_producto_Inventario1`
    FOREIGN KEY (`ID_Salida_producto_Inventario_FK`)
    REFERENCES `mydb`.`Salida_producto_Inventario` (`ID_Salida_producto_Inventario_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Tipo_Informe_Empleado_Entrada_Producto1_idx` ON `mydb`.`Tipo_Informe_Empleado` (`ID_Entrada_Producto_PK` ASC) VISIBLE;

CREATE INDEX `fk_Tipo_Informe_Empleado_Salida_producto_Inventario1_idx` ON `mydb`.`Tipo_Informe_Empleado` (`ID_Salida_producto_Inventario_FK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Detalle_Pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Detalle_Pedido` (
  `ID_Detalle_Pedido_PK` INT NOT NULL AUTO_INCREMENT COMMENT 'Campo con la llave primaria del detalle del pedido.',
  `Cantidad_Producto` SMALLINT NOT NULL COMMENT 'Campo con la cantidad de unidades de productos a que se descontaran en el inventario.',
  `SubTotal` INT NOT NULL COMMENT 'Campo con el sub-total del detalle del pedido segun la cantidad y el precio del producto.',
  `Pedido_ID_Pedido_PK` INT NOT NULL,
  `ID_Inventario_FK` SMALLINT(10) NOT NULL,
  PRIMARY KEY (`ID_Detalle_Pedido_PK`),
  CONSTRAINT `fk_Detalle_Pedido_Pedido1`
    FOREIGN KEY (`Pedido_ID_Pedido_PK`)
    REFERENCES `mydb`.`Pedido` (`ID_Pedido_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Detalle_Pedido_Inventario1`
    FOREIGN KEY (`ID_Inventario_FK`)
    REFERENCES `mydb`.`Inventario` (`ID_Inventario_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Detalle_Pedido_Pedido1_idx` ON `mydb`.`Detalle_Pedido` (`Pedido_ID_Pedido_PK` ASC) VISIBLE;

CREATE INDEX `fk_Detalle_Pedido_Inventario1_idx` ON `mydb`.`Detalle_Pedido` (`ID_Inventario_FK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Tipo_Informe_Cuenta_Deudor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tipo_Informe_Cuenta_Deudor` (
  `ID_Tipo_Informe_Cuenta_Deudor_PK` INT NOT NULL AUTO_INCREMENT COMMENT 'Campo con la llave primaria del tipo de informe de la cuenta del deudor.',
  `Saldo_Cuenta_Deudor_ID_Saldo_PK` INT NOT NULL,
  PRIMARY KEY (`ID_Tipo_Informe_Cuenta_Deudor_PK`),
  CONSTRAINT `fk_Tipo_Informe_Cuenta_Deudor_Saldo_Cuenta_Deudor1`
    FOREIGN KEY (`Saldo_Cuenta_Deudor_ID_Saldo_PK`)
    REFERENCES `mydb`.`Saldo_Cuenta_Deudor` (`ID_Saldo_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Tipo_Informe_Cuenta_Deudor_Saldo_Cuenta_Deudor1_idx` ON `mydb`.`Tipo_Informe_Cuenta_Deudor` (`Saldo_Cuenta_Deudor_ID_Saldo_PK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Registro_Proveedor_has_Producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Registro_Proveedor_has_Producto` (
  `ID_Registro_Proveedor_FKPK` SMALLINT(3) NOT NULL,
  `ID_Producto_FKPK` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`ID_Registro_Proveedor_FKPK`, `ID_Producto_FKPK`),
  CONSTRAINT `fk_Registro_Proveedor_has_Producto_Registro_Proveedor1`
    FOREIGN KEY (`ID_Registro_Proveedor_FKPK`)
    REFERENCES `mydb`.`Registro_Proveedor` (`ID_Registro_Proveedor_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Registro_Proveedor_has_Producto_Producto1`
    FOREIGN KEY (`ID_Producto_FKPK`)
    REFERENCES `mydb`.`Producto` (`ID_Producto_PK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Registro_Proveedor_has_Producto_Producto1_idx` ON `mydb`.`Registro_Proveedor_has_Producto` (`ID_Producto_FKPK` ASC) VISIBLE;

CREATE INDEX `fk_Registro_Proveedor_has_Producto_Registro_Proveedor1_idx` ON `mydb`.`Registro_Proveedor_has_Producto` (`ID_Registro_Proveedor_FKPK` ASC) VISIBLE;

USE `sigfvi_bd` ;

-- -----------------------------------------------------
-- Table `sigfvi_bd`.`estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigfvi_bd`.`estado` (
  `ID_Estado_PK` TINYINT(20) NOT NULL AUTO_INCREMENT,
  `Nombre_Estado` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`ID_Estado_PK`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `sigfvi_bd`.`tipo_cargo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigfvi_bd`.`tipo_cargo` (
  `ID_Tipo_Cargo_PK` TINYINT(5) NOT NULL AUTO_INCREMENT,
  `Nombre_Tipo_cargo` VARCHAR(45) NOT NULL,
  `ID_Estado_FK` TINYINT(20) NOT NULL,
  PRIMARY KEY (`ID_Tipo_Cargo_PK`),
  CONSTRAINT `tipo_cargo_ibfk_1`
    FOREIGN KEY (`ID_Estado_FK`)
    REFERENCES `sigfvi_bd`.`estado` (`ID_Estado_PK`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

CREATE INDEX `ID_Estado_FK` ON `sigfvi_bd`.`tipo_cargo` (`ID_Estado_FK` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sigfvi_bd`.`tipo_identificacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigfvi_bd`.`tipo_identificacion` (
  `ID_Tipo_Identificacion_PK` TINYINT(5) NOT NULL AUTO_INCREMENT,
  `Nombre_Identificacion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID_Tipo_Identificacion_PK`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `sigfvi_bd`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigfvi_bd`.`usuario` (
  `ID_Tipo_Identificacion_FK` TINYINT(10) NOT NULL,
  `ID_Numero_Identificacion_PK` VARCHAR(25) NOT NULL,
  `ID_Tipo_Cargo_FK` TINYINT(5) NOT NULL,
  `Primer_Nombre_Usuario` VARCHAR(45) NOT NULL,
  `Segundo_Nombre_Usuario` VARCHAR(45) NULL DEFAULT NULL,
  `Primer_Apellido_Usuario` VARCHAR(45) NOT NULL,
  `Segundo_Apellido_Usuario` VARCHAR(45) NULL DEFAULT NULL,
  `Numero_Contacto_Usuario` VARCHAR(10) NOT NULL,
  `Email_Usuario` VARCHAR(45) NOT NULL,
  `Contraseña_Usuario` VARCHAR(45) NOT NULL,
  `ID_Estado_FK` TINYINT(20) NOT NULL,
  PRIMARY KEY (`ID_Numero_Identificacion_PK`),
  CONSTRAINT `usuario_ibfk_1`
    FOREIGN KEY (`ID_Tipo_Identificacion_FK`)
    REFERENCES `sigfvi_bd`.`tipo_identificacion` (`ID_Tipo_Identificacion_PK`),
  CONSTRAINT `usuario_ibfk_2`
    FOREIGN KEY (`ID_Tipo_Cargo_FK`)
    REFERENCES `sigfvi_bd`.`tipo_cargo` (`ID_Tipo_Cargo_PK`),
  CONSTRAINT `usuario_ibfk_3`
    FOREIGN KEY (`ID_Estado_FK`)
    REFERENCES `sigfvi_bd`.`estado` (`ID_Estado_PK`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

CREATE INDEX `ID_Tipo_Identificacion_FK` ON `sigfvi_bd`.`usuario` (`ID_Tipo_Identificacion_FK` ASC) VISIBLE;

CREATE INDEX `ID_Tipo_Cargo_FK` ON `sigfvi_bd`.`usuario` (`ID_Tipo_Cargo_FK` ASC) VISIBLE;

CREATE INDEX `ID_Estado_FK` ON `sigfvi_bd`.`usuario` (`ID_Estado_FK` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
